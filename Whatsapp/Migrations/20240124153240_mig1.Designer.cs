// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Whatsapp.Models.TestModels;

#nullable disable

namespace Whatsapp.Migrations
{
    [DbContext(typeof(MyChatingAppContext))]
    [Migration("20240124153240_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Whatsapp.Models.MessagesTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int>("FromId")
                        .HasColumnType("int");

                    b.Property<int>("FromId1")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ToId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("FromId1");

                    b.HasIndex("ToId");

                    b.ToTable("MessagesTb", (string)null);
                });

            modelBuilder.Entity("Whatsapp.Models.UsersTb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Gmail" }, "Uniqe_Gmail_Constraint")
                        .IsUnique();

                    b.HasIndex(new[] { "Password" }, "Uniqe_Password_Constraint")
                        .IsUnique();

                    b.ToTable("UsersTb", (string)null);
                });

            modelBuilder.Entity("Whatsapp.Models.MessagesTb", b =>
                {
                    b.HasOne("Whatsapp.Models.UsersTb", "User")
                        .WithMany("MessagesFrom")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("CK_FromId_To_UserId");

                    b.HasOne("Whatsapp.Models.UsersTb", "From")
                        .WithMany()
                        .HasForeignKey("FromId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Whatsapp.Models.UsersTb", "To")
                        .WithMany("MessagesTo")
                        .HasForeignKey("ToId")
                        .HasConstraintName("CK_ToId_To_UserId");

                    b.Navigation("From");

                    b.Navigation("To");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Whatsapp.Models.UsersTb", b =>
                {
                    b.Navigation("MessagesFrom");

                    b.Navigation("MessagesTo");
                });
#pragma warning restore 612, 618
        }
    }
}
